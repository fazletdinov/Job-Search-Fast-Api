"""Create table

Revision ID: 5265ef88d90b
Revises: 
Create Date: 2023-11-25 18:19:32.055928

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5265ef88d90b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('entry',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('user_agent', sa.String(length=100), nullable=True),
    sa.Column('date_time', sa.DateTime(), nullable=False),
    sa.Column('refresh_token', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hr',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('Имя', sa.String(length=250), nullable=False),
    sa.Column('Фамилия', sa.String(length=250), nullable=False),
    sa.Column('Отчество', sa.String(length=250), nullable=False),
    sa.Column('Возраст', sa.Integer(), nullable=False),
    sa.Column('Название компании', sa.String(length=250), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resume',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('Имя', sa.String(length=250), nullable=False),
    sa.Column('Фамилия', sa.String(length=250), nullable=False),
    sa.Column('Отчество', sa.String(length=250), nullable=False),
    sa.Column('Возраст', sa.Integer(), nullable=False),
    sa.Column('Опыт работы', sa.String(length=250), nullable=False),
    sa.Column('Образование', sa.String(length=250), nullable=False),
    sa.Column('О себе', sa.String(length=3000), nullable=True),
    sa.Column('Изображение', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_role',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vacansy',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('Место работы', sa.String(length=250), nullable=False),
    sa.Column('О компании', sa.String(length=3000), nullable=True),
    sa.Column('Треубемая специальность', sa.String(length=500), nullable=False),
    sa.Column('Заработная плата', sa.String(length=120), nullable=False),
    sa.Column('Рабочие условия', sa.String(length=250), nullable=False),
    sa.Column('Требуемый опыт', sa.String(length=250), nullable=False),
    sa.Column('Активна', sa.Boolean(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('hr_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['hr_id'], ['hr.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('text', sa.String(length=1000), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('vacansy_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vacansy_id'], ['vacansy.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comment')
    op.drop_table('vacansy')
    op.drop_table('user_role')
    op.drop_table('resume')
    op.drop_table('hr')
    op.drop_table('entry')
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###
